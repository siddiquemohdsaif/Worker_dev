const LZ4_util = require('../../Utils/LZ4_util');
const axios = require('axios');


//const p = '';




const getTopPlayers = async () => {
    try {
        const response = await axios.post('https://function.cloudsw3.com/cc-app-api/seasonLeaderboardServer/get-top-players-fresh?from=1&to=500');
        return response.data;
    } catch (error) {
        console.error('Error calling getTopPlayers API:', error);
        throw new Error("error :" + error.message);
    }
}

const getTopClans = async () => {
    try {
        const response = await axios.post('https://function.cloudsw3.com/cc-app-api/seasonLeaderboardServer/get-top-clans-fresh?from=1&to=500');
        return response.data;
    } catch (error) {
        console.error('Error calling getTopClans API:', error);
        throw new Error("error :" + error.message);
    }
}


const giveRewardAndSetResult = async (topPlayersCompressString, topClansCompressString, rewardUids, rewardCids) => {
    const bodyData = {topPlayersCompressString, topClansCompressString, rewardUids, rewardCids}
    try {
        const response = await axios.post('https://function.cloudsw3.com/cc-app-api/seasonServer/give-rewards-and-set-result', bodyData);
        return response.data;
    } catch (error) {
        console.error('Error calling giveRewardAndSetResult API:', error);
        throw new Error("error :" + error.message);
    }
}



const makeResult = async() => {

    // //test decompression

    // const str_obj =  await LZ4_util.decompressString();
    // const obj = JSON.parse(str_obj);
    // console.log(obj);



    //get TopPlayers and topClans
    const topPlayerResponse = await getTopPlayers(); 
    const topClanResponse = await getTopClans(); 

    let topPlayerCommaIndex = topPlayerResponse.players.indexOf(',');
    const topPlayersCompressString = topPlayerResponse.players.substring(topPlayerCommaIndex + 1);

    let topClanCommaIndex = topClanResponse.clans.indexOf(',');
    const topClansCompressString = topClanResponse.clans.substring(topClanCommaIndex + 1);

    //console.log(topPlayersCompressString);
    //console.log(topClansCompressString);


    const topPlayers = JSON.parse(await LZ4_util.decompressString(topPlayersCompressString));
    const topClans = JSON.parse(await LZ4_util.decompressString(topClansCompressString));


    const rewardUids = topPlayers.map(player => player.uid);
    const rewardCids = topClans.map(clan => clan.clanId);

    await giveRewardAndSetResult(topPlayersCompressString, topClansCompressString, rewardUids, rewardCids);
}

module.exports = {
    makeResult
}











